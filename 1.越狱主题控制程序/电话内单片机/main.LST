C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include "STC12C5A60S2.h"
   3          #include "intrins.h" 
   4          #include "stdio.h"
   5          #include"uart.h"
   6          
   7          #define uchar unsigned char
   8          #define uint unsigned int
   9          
  10          sbit OUT1   =  P4^2;            //输出IO口1，   
  11          sbit OUT2   =  P1^0;        //输出2，        告诉单片机开R5的门！！！！ 
  12          sbit OUT3   =  P1^1;            //输出3，       
  13          sbit OUT4   =  P1^2;        //输出4，       
  14          sbit OUT5   =  P1^3;        //输出5，       
  15          sbit OUT6   =  P1^4;            //输出6，       
  16          sbit OUT7   =  P1^5;            //输出7，        
  17          sbit OUT8   =  P1^6;            //输出8，       
  18          sbit OUT9   =  P1^7;            //输出9，        
  19          sbit OUT10  =  P4^3;            //输出10，      
  20          sbit OUT11  =  P3^2;        //输出11，
  21          sbit OUT12  =  P3^3;        //输出12，
  22          
  23          
  24          sbit M10     =  P2^6;            //电缸1+       
  25          sbit M11     =  P2^7;            //电缸1-
  26          sbit M20     =  P3^4;            //电缸2+
  27          sbit M21     =  P3^5;            //电缸2-
  28          sbit M30     =  P3^6;            //电缸3+
  29          sbit M31     =  P3^7;            //电缸3-
  30          
  31          sbit OUT21   =  P4^0;           //输出IO控制口21
  32          sbit OUT22   =  P2^0;       //输出22
  33          sbit OUT23   =  P2^1;           //输出23
  34          sbit OUT24   =  P2^2;       //输出24
  35          sbit OUT25   =  P2^3;       //输出25
  36          sbit OUT26   =  P2^4;           //输出26
  37          sbit OUT27   =  P2^5;           //输出27
  38          //sbit OUT28   =  P2^6;     电缸控制口复用
  39          //sbit OUT29   =  P2^7;         电缸控制口复用
  40          
  41          sbit INPUT16   =  P4^4;         //输入IO控制口16，  
  42          sbit INPUT15   =  P4^5;     //输入15，           
  43          sbit INPUT14   =  P4^1;         //输入14                         
  44          sbit INPUT13   =  P4^6;     //输入13                     
  45          sbit INPUT12   =  P0^7;     //输入12                     电话听筒拿起！！
  46          sbit INPUT11   =  P0^6;         //输入11，按键类型       
  47          
  48          sbit INPUT10   =  P0^5;         //输入10，门禁类型       
  49          sbit INPUT9    =  P0^4;         //输入9，门禁            
  50          sbit INPUT8    =  P0^3;         //输入8，门禁            
  51          sbit INPUT7    =  P0^2;         //输入7，门禁            电箱错误!
  52          sbit INPUT6    =  P0^1;         //输入6，门禁            电箱正确!
  53          sbit INPUT5    =  P0^0;     //输入5，门禁类型    主单片机信号传来！
  54          
  55          sbit RXD   =  P3^0;         
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 2   

  56          sbit TXD   =  P3^1;
  57          
  58          #define uchar unsigned char
  59          #define uint unsigned int
  60          
  61          sfr P4sw=0xbb;
  62          
  63          void sys_init(void);
  64          void delay_ms(int count);
  65          void mp3_init();
  66          void mp3(unsigned char comd);
  67          void key_scan(void);
  68          
  69          unsigned char flag=0,flag1=1,flag3=1,flag4=1,STEP=1,PICK_UP=0,num=0;
  70          int i=0;
  71          
  72          
  73          
  74          /************************************************************************
  75              函数名称：   void main(void)                
  76              函数功能：   
  77              调用函数：  void delay(unsigned int loop_time)      
  78          *************************************************************************/
  79          void main()
  80          {
  81   1              sys_init();             
  82   1              P4sw = 0x70;
  83   1              STEP=1;
  84   1              PICK_UP=0;
  85   1         while(1)
  86   1               {                              
  87   2                      if(STEP==1)
  88   2                      {
  89   3                        if((INPUT5==0)||(flag==1))             //主单片机信号传输过来
  90   3                              {
  91   4                                delay_ms(50);
  92   4                                if((INPUT5==0)||(flag==1))    
  93   4                                {
  94   5                                 mp3(0X01);                  //第一段电话铃声
  95   5                                 flag=1;
  96   5                                 INPUT5=1;
  97   5                                 delay_ms(3000);
  98   5                                }
  99   4                              }
 100   3                              
 101   3                              if((INPUT12==0)&&(flag1==1))                        //电话被拿起,开启第二段音效
 102   3                              {
 103   4                                delay_ms(50);
 104   4                                if((INPUT12==0)&&(flag1==1))
 105   4                                {
 106   5                                   flag=0;
 107   5                                       flag1=0;
 108   5                                       mp3(0X33);     
 109   5                                       mp3(0X02);                                     //第二段电话声
 110   5                                       delay_ms(3000);
 111   5                                       STEP=2;
 112   5                                }
 113   4                              }
 114   3                      }
 115   2              if(STEP==2)
 116   2              {        
 117   3              /*         if(flag1==0)
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 3   

 118   3                        {
 119   3                              delay_ms(5000);
 120   3                              delay_ms(5000);
 121   3                              delay_ms(5000);
 122   3                              delay_ms(5000);
 123   3                              delay_ms(5000);
 124   3                              delay_ms(5000);
 125   3                        }*/
 126   3                      for(i=1;i<120;i++)
 127   3                      {
 128   4                       key_scan();
 129   4                       delay_ms(250);
 130   4                      }
 131   3      
 132   3                      if(num==1)
 133   3                       {
 134   4                              while(INPUT12==1)
 135   4                              {
 136   5                                       mp3(0X01);
 137   5                                   delay_ms(3500);
 138   5      
 139   5                              } 
 140   4                              mp3(0X04);
 141   4                              for(i=1;i<120;i++)
 142   4                              {
 143   5                               key_scan();
 144   5                               delay_ms(250);
 145   5                              }        
 146   4                       }
 147   3                      else if(num==3) 
 148   3                        {
 149   4                              while(INPUT12==1)
 150   4                              {
 151   5                                       mp3(0X01);
 152   5                                   delay_ms(3500);
 153   5      
 154   5                              }
 155   4                              mp3(0X03);
 156   4                              delay_ms(8000);
 157   4                              OUT2=0;                                         //告诉单片机开R5的电磁锁！！
 158   4                              STEP=3;                                         //跳出第二阶段
 159   4                              delay_ms(8000);
 160   4                              delay_ms(8000);
 161   4                              delay_ms(8000);
 162   4                              mp3(0X35);
 163   4                              for(i=1;i<1200;i++)
 164   4                              {
 165   5                              // key_scan();
 166   5                               delay_ms(5000);
 167   5                              }
 168   4                        }
 169   3                       
 170   3                       
 171   3                       
 172   3      /*               
 173   3                       if((INPUT7==0)&&(INPUT12==1)&&(PICK_UP==0))                                    //打开了错误牢房的门！！并且电话挂上了，错误的语音
 174   3                              { 
 175   3                               delay_ms(50);
 176   3                               if((INPUT7==0)&&(INPUT12==1))
 177   3                               {
 178   3                                 mp3(0X01);                                                              //第1段语音,电话叮叮叮
 179   3                                 flag4=0;
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 4   

 180   3                                 delay_ms(3000);
 181   3                                 flag1=1;
 182   3                               }
 183   3                              }
 184   3                      else if((INPUT7==0)&&(INPUT12==0)&&(PICK_UP==0))
 185   3                              {
 186   3                                 flag4=0;
 187   3                                 flag1=1;
 188   3                              }
 189   3                      else if((INPUT6==0)&&(INPUT7!=0)&&(INPUT12==1)&&(PICK_UP==0))                                   //打开了正确牢房的门！！并且电话挂上了
 190   3                              { 
 191   3                               delay_ms(50);
 192   3                               if((INPUT6==0)&&(INPUT7!=0)&&(INPUT12==1))
 193   3                               {
 194   3                                 mp3(0X01);                                   //第1段语音,电话声
 195   3                                 flag3=0;
 196   3                                  delay_ms(3000);
 197   3                                      flag1=1;
 198   3                                      //PICK_UP=1;
 199   3                               }
 200   3                              }
 201   3                      else if((INPUT6==0)&&(INPUT7!=0)&&(INPUT12==0)&&(PICK_UP==0))
 202   3                              {
 203   3                                 flag1=1;
 204   3                              }
 205   3                      
 206   3                       delay_ms(5000);
 207   3      
 208   3                      if((flag4==0)&&(INPUT12==0))                                                       //拿起错误的电话
 209   3                              {
 210   3                                 mp3(0X04);               //第四段语音，你们错误！！
 211   3                                 flag4=1;
 212   3                                 flag1=0;
 213   3                               //  PICK_UP=0;
 214   3                                 delay_ms(5000);                  // 延迟一分钟
 215   3                                 delay_ms(5000);
 216   3                                 delay_ms(5000);
 217   3                                 delay_ms(5000);
 218   3                                 delay_ms(5000);
 219   3                                 delay_ms(5000);
 220   3                              }
 221   3                      else if((flag3==0)&&(INPUT12==0))                                          //拿起正确的电话
 222   3                              {
 223   3                                // PICK_UP=0;
 224   3                                 mp3(0X33);
 225   3                                 mp3(0X03);                                                   //第3段语音,你们成功了！
 226   3                                 flag3=1;
 227   3                                 flag1=0;
 228   3                                 delay_ms(8000);
 229   3                                   OUT2=0;                                            //告诉单片机开R5的电磁锁！！
 230   3                                       STEP=3;                                                //跳出第二阶段
 231   3                              }                       */
 232   3              }                                       
 233   2                                                                      
 234   2       }                                                                                                        
 235   1      }
 236                                                                                                                                                                                      
 237          void key_scan(void)
 238          {
 239   1              if((INPUT7==0)&&(INPUT12==1))                                   //错误！并且电话挂上了，错误的语音
 240   1                              { 
 241   2                                 num=1;
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 5   

 242   2                              }
 243   1                      else if((INPUT7==0)&&(INPUT12==0))
 244   1                              {
 245   2                                 num=2;
 246   2                              }
 247   1                      else if((INPUT6==0)&&(INPUT7!=0)&&(INPUT12==1)) //打开了正确牢房的门！！并且电话挂上了
 248   1                              { 
 249   2                                      num=3;
 250   2                              
 251   2                              }
 252   1                      else if((INPUT6==0)&&(INPUT7!=0)&&(INPUT12==0))    //正确，电话没挂
 253   1                              {
 254   2                                      num=4;
 255   2                              }
 256   1      
 257   1      }
 258          
 259          void sys_init()
 260          {
 261   1              P0M1=0X00;
 262   1              P0M0=0Xff;      //设置P0为推挽输出
 263   1              
 264   1              P1M1=0X00;
 265   1              P1M0=0XFF;          //设置P1为推挽输出
 266   1              
 267   1              P2M1=0X00;
 268   1              P2M0=0XFF;              //设置P2口为推挽输出
 269   1              
 270   1              P3M1=0X00;
 271   1              P3M0=0XFC;          //设置P3为推挽输出
 272   1      
 273   1              P4M1=0X00;
 274   1              P4M0=0XFF;      //设置P4为推挽输出
 275   1              
 276   1                      
 277   1              
 278   1              
 279   1              INPUT16=1;  
 280   1              INPUT15=1;      
 281   1              INPUT14=1; 
 282   1              INPUT13=1; 
 283   1              INPUT11=1;      
 284   1              INPUT12=1;
 285   1              INPUT10=1;
 286   1              INPUT9=1;
 287   1              INPUT8=1;
 288   1              INPUT7=1;
 289   1              INPUT6=1;
 290   1              INPUT5=1;
 291   1      
 292   1              OUT2=1;
 293   1                        
 294   1              uart_init();               //串口初始化 
 295   1              mp3_init();                //MP3初始化  */
 296   1      
 297   1      }
 298          
 299          
 300          
 301          void delay_ms(int count)  // /* X1ms */
 302          {
 303   1              int i,j;
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 6   

 304   1              for(i=0;i<count;i++)
 305   1                      for(j=0;j<1000;j++);
 306   1      } 
 307          
 308          
 309          
 310          /*********************************************************/
 311          /*                                                       */
 312          /* MP3操作指令                                           */
 313          /*                                                       */
 314          /*********************************************************/
 315          void mp3(unsigned char comd)
 316          {
 317   1        switch(comd)
 318   1                {
 319   2                  
 320   2                  case 0X01: send(0X7E);//指令开始位
 321   2                                         send(0X04);//说明指令长度
 322   2                                         send(0X42);//指定文件夹播放
 323   2                                         send(0X01);//定位到名称为“01”的文件夹
 324   2                                         send(0x01);//播放第1个音频文件
 325   2                                         send(0XEF);//指令结束位 
 326   2                                     break;
 327   2                      case 0X02: send(0X7E);//指令开始位
 328   2                                         send(0X04);//说明指令长度
 329   2                                         send(0X42);//指定文件夹播放
 330   2                                         send(0X01);//定位到名称为“01”的文件夹
 331   2                                         send(0x02);//播放第2个音频文件
 332   2                                         send(0XEF);//指令结束位 
 333   2                                     break;
 334   2                  case 0X03: send(0X7E);//指令开始位
 335   2                                         send(0X04);//说明指令长度
 336   2                                         send(0X42);//指定文件夹播放
 337   2                                         send(0X01);//定位到名称为“01”的文件夹
 338   2                                         send(0x03);//播放第3个音频文件
 339   2                                         send(0XEF);//指令结束位 
 340   2                                     break;
 341   2                      case 0X04: send(0X7E);//指令开始位
 342   2                                         send(0X04);//说明指令长度
 343   2                                         send(0X42);//指定文件夹播放
 344   2                                         send(0X01);//定位到名称为“01”的文件夹
 345   2                                         send(0x04);//播放第4个音频文件
 346   2                                         send(0XEF);//指令结束位 
 347   2                                     break;
 348   2                      case 0X05: send(0X7E);//指令开始位
 349   2                                         send(0X04);//说明指令长度
 350   2                                         send(0X42);//指定文件夹播放
 351   2                                         send(0X01);//定位到名称为“01”的文件夹
 352   2                                         send(0x05);//播放第5个音频文件
 353   2                                         send(0XEF);//指令结束位 
 354   2                                     break;
 355   2                  case 0X06: send(0X7E);//指令开始位
 356   2                                         send(0X04);//说明指令长度
 357   2                                         send(0X42);//指定文件夹播放
 358   2                                         send(0X01);//定位到名称为“01”的文件夹
 359   2                                         send(0x06);//播放第6个音频文件
 360   2                                         send(0XEF);//指令结束位 
 361   2                                     break;
 362   2                      case 0X07: send(0X7E);//指令开始位
 363   2                                         send(0X04);//说明指令长度
 364   2                                         send(0X42);//指定文件夹播放
 365   2                                         send(0X01);//定位到名称为“01”的文件夹
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 7   

 366   2                                         send(0x07);//播放第7个音频文件
 367   2                                         send(0XEF);//指令结束位 
 368   2                                     break;
 369   2                      case 0X08: send(0X7E);//指令开始位
 370   2                                         send(0X04);//说明指令长度
 371   2                                         send(0X42);//指定文件夹播放
 372   2                                         send(0X01);//定位到名称为“01”的文件夹
 373   2                                         send(0x08);//播放第8个音频文件
 374   2                                         send(0XEF);//指令结束位 
 375   2                                     break;
 376   2                  case 0X09: send(0X7E);//指令开始位
 377   2                                         send(0X04);//说明指令长度
 378   2                                         send(0X42);//指定文件夹播放
 379   2                                         send(0X01);//定位到名称为“01”的文件夹
 380   2                                         send(0x09);//播放第9个音频文件
 381   2                                         send(0XEF);//指令结束位 
 382   2                                     break;
 383   2                      case 0X0A: send(0X7E);//指令开始位
 384   2                                         send(0X04);//说明指令长度
 385   2                                         send(0X42);//指定文件夹播放
 386   2                                         send(0X01);//定位到名称为“01”的文件夹
 387   2                                         send(0x0A);//播放第10个音频文件
 388   2                                         send(0XEF);//指令结束位 
 389   2                                     break;
 390   2                      case 0X0B: send(0X7E);//指令开始位
 391   2                                         send(0X04);//说明指令长度
 392   2                                         send(0X42);//指定文件夹播放
 393   2                                         send(0X01);//定位到名称为“01”的文件夹
 394   2                                         send(0x0B);//播放第11个音频文件
 395   2                                         send(0XEF);//指令结束位 
 396   2                                     break;
 397   2                  case 0X0C: send(0X7E);//指令开始位
 398   2                                         send(0X04);//说明指令长度
 399   2                                         send(0X42);//指定文件夹播放
 400   2                                         send(0X01);//定位到名称为“01”的文件夹
 401   2                                         send(0x0C);//播放第12个音频文件
 402   2                                         send(0XEF);//指令结束位 
 403   2                                     break;
 404   2                      case 0X0D: send(0X7E);//指令开始位
 405   2                                         send(0X04);//说明指令长度
 406   2                                         send(0X42);//指定文件夹播放
 407   2                                         send(0X01);//定位到名称为“01”的文件夹
 408   2                                         send(0x0D);//播放第13个音频文件
 409   2                                         send(0XEF);//指令结束位 
 410   2                                     break;
 411   2                      case 0X0E: send(0X7E);//指令开始位
 412   2                                         send(0X04);//说明指令长度
 413   2                                         send(0X42);//指定文件夹播放
 414   2                                         send(0X01);//定位到名称为“01”的文件夹
 415   2                                         send(0x0E);//播放第14个音频文件
 416   2                                         send(0XEF);//指令结束位 
 417   2                                     break;
 418   2                  case 0X0F: send(0X7E);//指令开始位
 419   2                                         send(0X04);//说明指令长度
 420   2                                         send(0X42);//指定文件夹播放
 421   2                                         send(0X01);//定位到名称为“01”的文件夹
 422   2                                         send(0x0F);//播放第15个音频文件
 423   2                                         send(0XEF);//指令结束位 
 424   2                                     break;
 425   2      
 426   2                      case 0X31: send(0X7E);//指令开始位
 427   2                                         send(0X03);//说明指令长度
C51 COMPILER V9.01   MAIN                                                                  01/06/2016 21:14:17 PAGE 8   

 428   2                                         send(0X31);//设置音量
 429   2                                         send(0X20);//20
 430   2                                         send(0XEF);//指令结束位 
 431   2                                     break;
 432   2                      case 0X32: send(0X7E);//指令开始位
 433   2                                         send(0X03);//说明指令长度
 434   2                                         send(0X31);//设置音量
 435   2                                         send(0X10);//20
 436   2                                         send(0XEF);//指令结束位 
 437   2                                     break;
 438   2      
 439   2                      case 0X33: send(0X7E);//指令开始位
 440   2                                         send(0X03);//说明指令长度
 441   2                                         send(0X33);//设置循环模式
 442   2                                         send(0X04);//单曲播放
 443   2                                         send(0XEF);//指令结束位 
 444   2                                     break;
 445   2                      
 446   2                      case 0X34: send(0X7E);//指令开始位
 447   2                                         send(0X03);//说明指令长度
 448   2                                         send(0X33);//设置循环模式
 449   2                                         send(0X02);//单曲循环！
 450   2                                         send(0XEF);//指令结束位 
 451   2                                     break;
 452   2                      case 0X35: send(0X7E);//指令开始位
 453   2                                         send(0X03);//说明指令长度
 454   2                                         send(0X31);//设置音量
 455   2                                         send(0X00);//20
 456   2                                         send(0XEF);//指令结束位 
 457   2                                     break;
 458   2                }
 459   1        
 460   1      }
 461          /*********************************************************/
 462          /*                                                       */
 463          /* MP3初始化                                             */
 464          /*                                                       */
 465          /*********************************************************/
 466          void mp3_init()
 467          {
 468   1        mp3(0x33);                 //设置循环模式为文件夹循环
 469   1        mp3(0x31);                 //设置音量为20
 470   1        //mp3(0x00);                 //开机播放
 471   1      
 472   1        /*不关闭串行中断的话一上电就会发送STOP，这样会影响曲名和播放歌曲的对应关系*/
 473   1        ES=0;                                    //串行中断禁止
 474   1        delay_ms(100);                           //等待MP3准备好
 475   1        ES=1;
 476   1      }
 477          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    838    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
