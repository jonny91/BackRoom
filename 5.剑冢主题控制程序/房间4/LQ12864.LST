C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LQ12864
OBJECT MODULE PLACED IN LQ12864.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE LQ12864.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********************************************
   2          龙丘OLED屏测试程序-STC&89C52 
   3          Designed by Chiu Sir
   4          E-mail:chiusir@yahoo.cn
   5          软件版本:V1.1
   6          最后更新:2011年9月3日
   7          相关信息参考下列地址：
   8          网站：  http://www.lqist.cn
   9          淘宝店：http://shop36265907.taobao.com
  10          *********************************************************/
  11          #include "STC12C5A60S2.h"
  12          #include "intrins.h"
  13          #include "LQ12864.h"
  14           
  15          sbit LCD_SCL=P2^3;  
  16          sbit LCD_SDA=P2^2;
  17          sbit LCD_RST=P2^1; 
  18          sbit LCD_DC =P2^0; 
  19          
  20          #define XLevelL         0x00
  21          #define XLevelH         0x10
  22          #define XLevel          ((XLevelH&0x0F)*16+XLevelL)
  23          #define Max_Column      128
  24          #define Max_Row         64
  25          #define Brightness      0xCF 
  26          
  27          /*
  28          4线SPI使用说明：
  29          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
  30          VCC 供内部逻辑电压 1.8~6V   
  31          GND 地
  32          
  33          BS0 低电平
  34          BS1 低电平
  35          BS2 低电平
  36          
  37          CS  片选管脚
  38          DC  命令数据选择管脚
  39          RES 模块复位管脚 
  40          D0（SCLK） ，时钟脚，由MCU控制
  41          D1（MOSI） ，主输出从输入数据脚，由MCU控制
  42          
  43          D2 悬空      
  44          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
  45          RD  低电平 ，也可悬空，但最好设为低电平
  46          RW  低电平 ，也可悬空，但最好设为低电平
  47          RD  低电平 ，也可悬空，但最好设为低电平   
  48          */
  49          
  50          #define X_WIDTH 128
  51          #define Y_WIDTH 64
  52          //======================================
  53          
  54          const unsigned char code F6x8[][6] =
  55          {
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 2   

  56              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
  57              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
  58              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
  59              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
  60              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
  61              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
  62              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
  63              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
  64              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
  65              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
  66              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
  67              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
  68              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
  69              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
  70              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
  71              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
  72              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
  73              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
  74              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
  75              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
  76              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
  77              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
  78              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
  79              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
  80              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
  81              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
  82              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
  83              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
  84              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
  85              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
  86              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
  87              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
  88              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
  89              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
  90              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
  91              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
  92              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
  93              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
  94              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
  95              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
  96              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
  97              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
  98              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
  99              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
 100              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
 101              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
 102              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
 103              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
 104              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
 105              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
 106              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
 107              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
 108              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
 109              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
 110              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
 111              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
 112              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
 113              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
 114              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
 115              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
 116              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
 117              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 3   

 118              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
 119              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
 120              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
 121              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
 122              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
 123              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
 124              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
 125              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
 126              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
 127              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
 128              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
 129              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
 130              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
 131              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
 132              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
 133              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
 134              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
 135              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
 136              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
 137              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
 138              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
 139              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
 140              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
 141              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
 142              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
 143              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
 144              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
 145              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
 146              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
 147              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
 148          };
 149          /*
 150          const unsigned char F14x16[] = {  
 151                  0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
 152                  0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙
 153                  0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
 154                  0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘
 155                  0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
 156                  0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智
 157                  0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
 158                  0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能
 159                  
 160          
 161                  
 162          };      */
 163          
 164          const unsigned char code F14x16_Idx[] = 
 165          {
 166                  "把健康戴在手上心率环境温度体步数"
 167          };
 168          const unsigned char F14x16[] = {        
 169                  0x10,0x10,0xFE,0x10,0x00,0xFC,0x04,0x04,0xFC,0x04,0x04,0xFC,0x00,0x00,
 170                  0x42,0x42,0x7F,0x01,0x00,0x3F,0x41,0x41,0x41,0x41,0x41,0x41,0x70,0x00,//把0
 171                  
 172                  0x40,0x20,0xF8,0x06,0x08,0xC8,0xB8,0x20,0xA8,0xFE,0xA8,0xF8,0x20,0x00,
 173                  0x00,0x00,0x7F,0x40,0x28,0x10,0x2F,0x20,0x4A,0x7F,0x4A,0x4A,0x48,0x00,//健1
 174                  
 175                  0x00,0x00,0xF8,0x88,0xA8,0xA8,0xAA,0xFC,0xA8,0xA8,0xE8,0x88,0x88,0x00,
 176                  0x40,0x30,0x0F,0x40,0x2A,0x12,0x42,0x7F,0x0A,0x12,0x2B,0x44,0x40,0x00,//康2
 177                  
 178                  0x10,0xF4,0x54,0x54,0xFE,0x54,0x54,0xF4,0x10,0xFE,0x10,0xD2,0x14,0x00,
 179                  0x10,0x55,0x3F,0x15,0x15,0x15,0x3F,0x55,0x50,0x23,0x1C,0x23,0x78,0x00,//戴3
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 4   

 180                  
 181                  0x08,0x08,0x88,0xE8,0x18,0x0E,0x08,0x08,0xE8,0x08,0x08,0x08,0x08,0x00,
 182                  0x02,0x01,0x00,0x7F,0x20,0x21,0x21,0x21,0x3F,0x21,0x21,0x21,0x20,0x00,//在4
 183                  
 184                  0x00,0x24,0x24,0x24,0x24,0x24,0xFC,0x24,0x22,0x22,0x22,0x22,0x00,0x00,
 185                  0x02,0x02,0x02,0x02,0x42,0x42,0x7F,0x02,0x02,0x02,0x02,0x02,0x02,0x00,//手5
 186                  
 187                  0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x40,0x40,0x40,0x40,0x40,0x00,0x00,
 188                  0x40,0x40,0x40,0x40,0x40,0x40,0x7F,0x40,0x40,0x40,0x40,0x40,0x40,0x00,//上6
 189                  
 190                  0x00,0x80,0x00,0x00,0xE0,0x02,0x04,0x18,0x00,0x00,0x80,0x00,0x00,0x00,
 191                  0x08,0x07,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x70,0x00,0x03,0x0C,0x00,//心7
 192                  
 193                  0x20,0x48,0x88,0x08,0x48,0x6A,0xDC,0x48,0x28,0x08,0x88,0x48,0x20,0x00,
 194                  0x0A,0x09,0x08,0x08,0x0A,0x0B,0x7E,0x0A,0x0B,0x0E,0x08,0x09,0x0A,0x00,//率8
 195                  
 196                  0x88,0x88,0xF8,0x88,0x88,0x04,0x04,0x84,0xE4,0x1C,0x84,0x04,0x04,0x00,
 197                  0x10,0x10,0x1F,0x08,0x08,0x02,0x01,0x00,0x7F,0x00,0x00,0x01,0x06,0x00,//环9
 198                  
 199                  0x20,0x20,0xFE,0x20,0x00,0xA4,0xAC,0xB4,0xA6,0xB4,0xAC,0xA4,0x20,0x00,
 200                  0x10,0x10,0x0F,0x08,0x40,0x4F,0x2A,0x1A,0x0A,0x3A,0x4A,0x4F,0x60,0x00,//境10
 201                  
 202                  0x20,0x44,0x08,0x00,0x00,0xFE,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00,
 203                  0x30,0x0C,0x03,0x40,0x7E,0x42,0x7E,0x42,0x42,0x7E,0x42,0x7E,0x40,0x00,//温11
 204                  
 205                  0x00,0x00,0xF8,0x28,0x28,0xF8,0xAA,0xAC,0xA8,0xA8,0xF8,0x28,0x28,0x00,
 206                  0x40,0x30,0x0F,0x40,0x42,0x26,0x2A,0x12,0x12,0x2A,0x26,0x42,0x40,0x00,//度12
 207                  
 208                  0x80,0x40,0xF0,0x0E,0x00,0x10,0x10,0xD0,0xFE,0xD0,0x10,0x10,0x10,0x00,
 209                  0x00,0x00,0x7F,0x00,0x08,0x04,0x0B,0x08,0x7F,0x08,0x0B,0x04,0x08,0x00,//体13
 210                  
 211                  0x40,0x40,0x7C,0x40,0x40,0x40,0x7E,0x48,0x48,0x48,0x48,0x48,0x40,0x00,
 212                  0x40,0x44,0x42,0x21,0x20,0x20,0x1F,0x10,0x08,0x04,0x02,0x00,0x00,0x00,//步14
 213                  
 214                  0x94,0x58,0x30,0xFE,0x30,0x58,0x94,0x80,0x60,0x9E,0x10,0xF0,0x10,0x00,
 215                  0x42,0x4A,0x2F,0x32,0x12,0x2E,0x40,0x00,0x40,0x27,0x18,0x27,0x40,0x00,//数15
 216          };
 217          
 218          
 219          //======================================================
 220          // 128X64I液晶底层驱动[8X16]字体库
 221          // 设计者: powerint
 222          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
 223          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 224          //======================================================
 225          
 226          const unsigned char code F8X16[]=
 227          {
 228            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
 229            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
 230            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
 231            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
 232            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
 233            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
 234            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
 235            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
 236            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
 237            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
 238            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
 239            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
 240            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
 241            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 5   

 242            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
 243            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
 244            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
 245            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
 246            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
 247            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
 248            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
 249            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
 250            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
 251            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
 252            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
 253            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
 254            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
 255            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
 256            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
 257            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
 258            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
 259            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
 260            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
 261            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
 262            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
 263            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
 264            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
 265            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
 266            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
 267            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
 268            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
 269            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
 270            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
 271            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
 272            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
 273            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
 274            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
 275            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
 276            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
 277            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
 278            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
 279            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
 280            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
 281            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
 282            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
 283            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
 284            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
 285            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
 286            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
 287            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
 288            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
 289            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
 290            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
 291            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
 292            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
 293            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
 294            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
 295            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
 296            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
 297            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
 298            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
 299            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
 300            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
 301            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
 302            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
 303            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 6   

 304            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
 305            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
 306            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
 307            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
 308            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
 309            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
 310            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
 311            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
 312            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
 313            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
 314            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
 315            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
 316            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
 317            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
 318            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
 319            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
 320            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
 321            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
 322            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
 323          
 324          };
 325          
 326          byte longqiu16x16[] = {
 327          
 328          0xFC,0xFF,0xFF,0xF3,0xFF,0xFF,0xFF,0xFE,0xFE,0xFF,0xF3,0xFF,0xFF,0xFF,   //心型
 329          0xFE,0xFC,0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF,0xFF,0x7F,0x3F,0x1F,
 330          0x0F,0x07,0x03,0x01,
 331          
 332          };
 333          
 334          byte xiaolian24x24[] = {
 335          
 336          
 337          0x00,0x00,0x00,0x60,0x10,0x10,0x10,0x10,0x60,0x00,0x00,0x00,0x00,0x00,
 338          0x60,0x10,0x10,0x10,0x10,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 339          0x00,0x00,0x00,0x00,0x30,0x40,0x40,0x40,0x40,0x40,0x40,0x30,0x00,0x00,
 340          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 341          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 342          0x00,0x00,//未命名文件0
 343          };
 344          
 345          byte xin24x24[] = {
 346          0x00,0x80,0xC0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0x80,0x00,0x80,
 347          0xC0,0xE0,0xE0,0xF0,0xF0,0xF0,0xE0,0xC0,0x80,0x00,0x00,0x0F,0x1F,0x3F,
 348          0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,
 349          0xFF,0x7F,0x1F,0x0F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,
 350          0x07,0x07,0x0F,0x1F,0x1F,0x1F,0x0F,0x07,0x03,0x01,0x00,0x00,0x00,0x00,
 351          0x00,0x00,//未命名文件0
 352          
 353           };
 354          
 355          byte jiao24x24[] = {
 356           0x00,0x00,0x00,0x40,0xE0,0xC0,0x38,0x28,0xB8,0xC0,0x5C,0x5C,0x40,0xDE,
 357          0x92,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,
 358          0x00,0x78,0x84,0x87,0x01,0x00,0x00,0x00,0x00,0xE0,0x98,0x0F,0x00,0x00,
 359          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
 360          0x03,0x06,0x38,0x60,0x40,0x40,0x43,0x46,0x6C,0x30,0x00,0x00,0x00,0x00,
 361          0x00,0x00,//未命名文件0
 362           };
 363          
 364          byte tem24x24[] = {
 365          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA8,0xA8,0xFE,0x02,0xFE,
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 7   

 366          0x54,0x54,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 367          0x00,0x00,0x00,0x00,0x00,0x2A,0x2A,0xFF,0x00,0xFF,0x15,0x15,0x00,0x00,
 368          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 369          0x0E,0x11,0x11,0x11,0x10,0x11,0x11,0x11,0x0E,0x00,0x00,0x00,0x00,0x00,
 370          0x00,0x00,//未命名文件0
 371           };
 372          
 373          
 374          void LCD_WrDat(unsigned char dat)
 375          {
 376   1              unsigned char i=8;
 377   1              //LCD_CS=0;;
 378   1              LCD_DC=1;;
 379   1        LCD_SCL=0;;
 380   1        //;;    
 381   1        while(i--)
 382   1        {
 383   2          if(dat&0x80){LCD_SDA=1;}
 384   2          else{LCD_SDA=0;}
 385   2          LCD_SCL=1; 
 386   2          ;;;
 387   2                      //;;            
 388   2          LCD_SCL=0;;    
 389   2          dat<<=1;    
 390   2        }
 391   1              //LCD_CS=1;
 392   1      }
 393          void LCD_WrCmd(unsigned char cmd)
 394          {
 395   1              unsigned char i=8;
 396   1              
 397   1              //LCD_CS=0;;
 398   1              LCD_DC=0;;
 399   1        LCD_SCL=0;;
 400   1        //;;   
 401   1        while(i--)
 402   1        {
 403   2          if(cmd&0x80){LCD_SDA=1;}
 404   2          else{LCD_SDA=0;;}
 405   2          LCD_SCL=1;;
 406   2          ;;;
 407   2                      //;;             
 408   2          LCD_SCL=0;;    
 409   2          cmd<<=1;;   
 410   2        }     
 411   1              //LCD_CS=1;
 412   1      }
 413          void LCD_Set_Pos(unsigned char x, unsigned char y)
 414          { 
 415   1        LCD_WrCmd(0xb0+y);
 416   1        LCD_WrCmd(((x&0xf0)>>4)|0x10);
 417   1        LCD_WrCmd((x&0x0f)|0x01); 
 418   1      } 
 419          void LCD_Fill(unsigned char bmp_dat)
 420          {
 421   1              unsigned char y,x;
 422   1              
 423   1              for(y=0;y<8;y++)
 424   1              {
 425   2                      LCD_WrCmd(0xb0+y);
 426   2                      LCD_WrCmd(0x01);
 427   2                      LCD_WrCmd(0x10);
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 8   

 428   2                      for(x=0;x<X_WIDTH;x++)
 429   2                              LCD_WrDat(bmp_dat);
 430   2              }
 431   1      }
 432          void LCD_CLS(void)
 433          {
 434   1              unsigned char y,x;      
 435   1              for(y=0;y<8;y++)
 436   1              {
 437   2                      LCD_WrCmd(0xb0+y);
 438   2                      LCD_WrCmd(0x01);
 439   2                      LCD_WrCmd(0x10); 
 440   2                      for(x=0;x<X_WIDTH;x++)
 441   2                              LCD_WrDat(0);
 442   2              }
 443   1      }
 444          void LCD_DLY_ms(unsigned int ms)
 445          {                         
 446   1        unsigned int a;
 447   1        while(ms)
 448   1        {
 449   2          a=1335;
 450   2          while(a--);
 451   2          ms--;
 452   2        }
 453   1        return;
 454   1      } 
 455          void LCD_Init(void)        
 456          {  
 457   1              LCD_SCL=1;
 458   1              //LCD_CS=1;     //预制SLK和SS为高电平   
 459   1              LCD_RST=0;
 460   1              LCD_DLY_ms(50);
 461   1              LCD_RST=1;
 462   1              
 463   1              //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕   
 464   1        
 465   1        LCD_WrCmd(0xae);//--turn off oled panel
 466   1        LCD_WrCmd(0x00);//---set low column address
 467   1        LCD_WrCmd(0x10);//---set high column address
 468   1        LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 469   1        LCD_WrCmd(0x81);//--set contrast control register
 470   1        LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
 471   1        LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 472   1        LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 473   1        LCD_WrCmd(0xa6);//--set normal display
 474   1        LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
 475   1        LCD_WrCmd(0x3f);//--1/64 duty
 476   1        LCD_WrCmd(0xd3);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 477   1        LCD_WrCmd(0x00);//-not offset
 478   1        LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
 479   1        LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 480   1        LCD_WrCmd(0xd9);//--set pre-charge period
 481   1        LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 482   1        LCD_WrCmd(0xda);//--set com pins hardware configuration
 483   1        LCD_WrCmd(0x12);
 484   1        LCD_WrCmd(0xdb);//--set vcomh
 485   1        LCD_WrCmd(0x40);//Set VCOM Deselect Level
 486   1        LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 487   1        LCD_WrCmd(0x02);//
 488   1        LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
 489   1        LCD_WrCmd(0x14);//--set(0x10) disable
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 9   

 490   1        LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 491   1        LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 492   1        LCD_WrCmd(0xaf);//--turn on oled panel
 493   1        LCD_Fill(0x00);  //初始清屏
 494   1        LCD_Set_Pos(0,0);     
 495   1      } 
 496          
 497          //==============================================================
 498          //函数名：LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char *p)
 499          //功能描述：写入一组标准ASCII字符串
 500          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 501          //返回：无
 502          //==============================================================  
 503          void LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char ch[])
 504          {
 505   1        unsigned char c=0,i=0,j=0;      
 506   1        while (ch[j]!='\0')
 507   1        {    
 508   2          c =ch[j]-32;
 509   2          if(x>126){x=0;y++;}
 510   2          LCD_Set_Pos(x,y);    
 511   2              for(i=0;i<6;i++)     
 512   2                LCD_WrDat(F6x8[c][i]);  
 513   2              x+=6;
 514   2              j++;
 515   2        }
 516   1      }
 517          //==============================================================
 518          //函数名：LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char *p)
 519          //功能描述：写入一组标准ASCII字符串
 520          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 521          //返回：无
 522          //============================================================== 
 523           
 524          void LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char ch[])
 525          {
 526   1        unsigned char c=0,i=0,j=0;
 527   1              
 528   1        while (ch[j]!='\0')
 529   1        {    
 530   2          c =ch[j]-32;
 531   2          if(x>120){x=0;y++;}
 532   2          LCD_Set_Pos(x,y);    
 533   2              for(i=0;i<8;i++)     
 534   2                LCD_WrDat(F8X16[c*16+i]);
 535   2              LCD_Set_Pos(x,y+1);    
 536   2              for(i=0;i<8;i++)     
 537   2                LCD_WrDat(F8X16[c*16+i+8]);  
 538   2              x+=8;
 539   2              j++;
 540   2        }
 541   1      }
 542          
 543          //输出汉字字符串
 544          void LCD_P14x16Ch(unsigned char x,unsigned char y,unsigned char N)
 545          {
 546   1              unsigned char wm=0,ii = 0;
 547   1              unsigned int adder=28*N;        
 548   1              LCD_Set_Pos(x , y);
 549   1              for(wm = 0;wm < 14;wm++)               
 550   1              {
 551   2                      LCD_WrDat(F14x16[adder]);       
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 10  

 552   2                      adder += 1;
 553   2              }      
 554   1              LCD_Set_Pos(x,y + 1); 
 555   1              for(wm = 0;wm < 14;wm++)          
 556   1              {
 557   2                      LCD_WrDat(F14x16[adder]);
 558   2                      adder += 1;
 559   2              }               
 560   1      }
 561          
 562          
 563          //输出汉字和字符混合字符串
 564          void LCD_Print(byte x, byte y, byte ch[])
 565          {
 566   1              byte ch2[3];
 567   1              byte ii=0;        
 568   1              while(ch[ii] != '\0')
 569   1              {
 570   2                      if(ch[ii] > 127)
 571   2                      {
 572   3                              ch2[0] = ch[ii];
 573   3                              ch2[1] = ch[ii + 1];
 574   3                              ch2[2] = '\0';                  //汉字为两个字节
 575   3                              LCD_P14x16Str(x , y, ch2);      //显示汉字
 576   3                              x += 14;
 577   3                              ii += 2;
 578   3                      }
 579   2                      else
 580   2                      {
 581   3                              ch2[0] = ch[ii];        
 582   3                              ch2[1] = '\0';                  //字母占一个字节
 583   3                              LCD_P8x16Str(x , y , ch2);      //显示字母
 584   3                              x += 8;
 585   3                              ii+= 1;
 586   3                      }
 587   2              }
 588   1      } 
 589          
 590          
 591          
 592          //输出汉字字符串
 593          void LCD_P14x16Str(byte x,byte y,byte ch[])
 594          {
 595   1              byte wm=0,ii = 0;
 596   1              word adder=1; 
 597   1              
 598   1              while(ch[ii] != '\0')
 599   1              {
 600   2              wm = 0;
 601   2              adder = 1;
 602   2              while(F14x16_Idx[wm] > 127)
 603   2              {
 604   3                      if(F14x16_Idx[wm] == ch[ii])
 605   3                      {
 606   4                              if(F14x16_Idx[wm + 1] == ch[ii + 1])
 607   4                              {
 608   5                                      adder = wm * 14;
 609   5                                      break;
 610   5                              }
 611   4                      }
 612   3                      wm += 2;                        
 613   3              }
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 11  

 614   2              if(x>118){x=0;y++;}
 615   2              LCD_Set_Pos(x , y); 
 616   2              if(adder != 1)// 显示汉字                                       
 617   2              {
 618   3                      LCD_Set_Pos(x , y);
 619   3                      for(wm = 0;wm < 14;wm++)               
 620   3                      {
 621   4                              LCD_WrDat(F14x16[adder]);       
 622   4                              adder += 1;
 623   4                      }      
 624   3                      LCD_Set_Pos(x,y + 1); 
 625   3                      for(wm = 0;wm < 14;wm++)          
 626   3                      {
 627   4                              LCD_WrDat(F14x16[adder]);
 628   4                              adder += 1;
 629   4                      }               
 630   3              }
 631   2              else                      //显示空白字符                        
 632   2              {
 633   3                      ii += 1;
 634   3            LCD_Set_Pos(x,y);
 635   3                      for(wm = 0;wm < 16;wm++)
 636   3                      {
 637   4                                      LCD_WrDat(0);
 638   4                      }
 639   3                      LCD_Set_Pos(x,y + 1);
 640   3                      for(wm = 0;wm < 16;wm++)
 641   3                      {               
 642   4                                      LCD_WrDat(0);   
 643   4                      }
 644   3              }
 645   2              x += 14;
 646   2              ii += 2;
 647   2              }
 648   1      }
 649          
 650          //==============================================================
 651          //函数名： void Draw_BMP(byte x,byte y)
 652          //功能描述：显示BMP图片128×64
 653          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
 654          //返回：无
 655          //==============================================================
 656          void Draw_BMP(byte x0,byte y0,byte x1,byte y1,byte bmp[])
 657          {       
 658   1        word ii=0;
 659   1        byte x,y;
 660   1        
 661   1        if(y1%8==0) y=y1/8;      
 662   1        else y=y1/8+1;
 663   1              for(y=y0;y<=y1;y++)
 664   1              {
 665   2                      LCD_Set_Pos(x0,y);                              
 666   2          for(x=x0;x<x1;x++)
 667   2                  {      
 668   3                      LCD_WrDat(bmp[ii++]);           
 669   3                  }
 670   2              }
 671   1      }
 672          
 673          void Draw_LQLogo(void)
 674          {       
 675   1        word ii=0;
C51 COMPILER V9.01   LQ12864                                                               06/07/2015 10:50:32 PAGE 12  

 676   1        byte x,y;       
 677   1        
 678   1              for(y=0;y<8;y++)
 679   1              {
 680   2                      LCD_Set_Pos(16,y);                              
 681   2          for(x=16;x<112;x++)
 682   2                  {      
 683   3                      LCD_WrDat(longqiu16x16[ii++]);          
 684   3                  }
 685   2              }
 686   1      }                                
 687          
 688          void display_BMP(void)
 689          {
 690   1         //LCD_CLS();
 691   1              Draw_BMP(16,6,40,7,xiaolian24x24);
 692   1      }
 693          
 694          void display_heart(void)
 695          {
 696   1              Draw_BMP(16,5,40,7,xin24x24);
 697   1      }
 698          void display_jiao(void)
 699          {
 700   1              Draw_BMP(16,5,40,7,jiao24x24);
 701   1      }
 702          void display_tem(void)
 703          {
 704   1              Draw_BMP(16,5,40,7,tem24x24);
 705   1      }
 706          
 707          
 708          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1610    ----
   CONSTANT SIZE    =   2104    ----
   XDATA SIZE       =    768      46
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
